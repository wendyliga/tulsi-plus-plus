name: Release

on:
  push:
    tags:
      - '*'

jobs:
  release:
    name: Release
    runs-on: macos-12
    strategy:
      matrix:
        xcode:
          - '14.1.0'
    timeout-minutes: 240
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: '2.7' # Not needed with a .ruby-version file
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically
    - name: Set output
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - name: Setup Bundle
      run: bundle install
    - name: Setup Keychain
      env:
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      run: bundle exec fastlane setup
    - name: Fetch Provisioning Profile
      env:
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }} 
        MATCH_REPO: ${{ secrets.MATCH_REPO }}
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
        GIT_EMAIL: ${{ secrets.GIT_EMAIL }}
      run: bundle exec fastlane certificates 
    - name: Build
      run: make build xcode=13.0 is_ci=true     
    - name: Notorize
      env:
        APPLE_ID: ${{ secrets.APPLE_ID }} 
        FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD : ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
        FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
        TEAM_NAME: ${{ secrets.TEAM_NAME }} 
        TEAM_ID: ${{ secrets.TEAM_ID }}
        CODESIGN_CERTIFICATE: ${{ secrets.CODESIGN_CERTIFICATE }}
        SPARKLE_PRIVATE_KEY: ${{ secrets.SPARKLE_PRIVATE_KEY}}
        RELEASE_VERSION: ${{ env.RELEASE_VERSION }}
      run: bundle exec fastlane notorize
    - name: "Create Release"
      uses: ncipollo/release-action@v1
      with:
        artifacts: "binary/tulsi_plus_plus.zip,binary/tulsi_plus_plus.zip.sha256,binary/tulsi_plus_plus.dmg,binary/tulsi_plus_plus.dmg.sha256"
        bodyFile: "binary/tulsi_plus_plus.html"
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v3
      with:
          token: ${{ secrets.BOT_ACCESS_TOKEN }}
          committer: Wendy's Github Bot <github-bot@wendyliga.com>
          author: Wendy's Github Bot <github-bot@wendyliga.com>
          commit-message: 'update appcast'
          title: 'Update appcast.xml'
          branch: update_appcast
          base: main
          branch-suffix: timestamp
          reviewers: wendyliga
    - name: Check outputs
      run: |
        echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
      
          
          
      